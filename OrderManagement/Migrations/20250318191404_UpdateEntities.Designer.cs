// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagement.Entities;

#nullable disable

namespace OrderManagement.Migrations
{
    [DbContext(typeof(OrdersDBContext))]
    [Migration("20250318191404_UpdateEntities")]
    partial class UpdateEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("OrderManagement.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("Client_pk");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "308 Negra Arroyo Lane, Albuquerque, NM",
                            ClientType = 1,
                            Name = "Mr. White"
                        },
                        new
                        {
                            Id = 2,
                            Address = "4275 Isleta Blvd SW, Albuquerque, NM ",
                            ClientType = 0,
                            Name = "Los Pollos Hermoanos"
                        });
                });

            modelBuilder.Entity("OrderManagement.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id")
                        .HasName("Item_pk");

                    b.ToTable("Item", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chicken",
                            Price = 3.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sky Blue",
                            Price = 40.0
                        });
                });

            modelBuilder.Entity("OrderManagement.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("Id")
                        .HasName("Order_pk");

                    b.HasIndex("IdClient");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "769 Birch Street, TX",
                            IdClient = 2,
                            PaymentMethod = 0,
                            Status = 5,
                            Total = 60.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "4588 Kenwood Place, FL",
                            IdClient = 2,
                            PaymentMethod = 1,
                            Status = 5,
                            Total = 180.0
                        });
                });

            modelBuilder.Entity("OrderManagement.Entities.OrderItem", b =>
                {
                    b.Property<int>("IdItem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdItem", "IdOrder")
                        .HasName("OrderItem_pk");

                    b.HasIndex("IdOrder");

                    b.ToTable("OrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            IdItem = 1,
                            IdOrder = 1,
                            ItemQuantity = 20
                        },
                        new
                        {
                            IdItem = 1,
                            IdOrder = 2,
                            ItemQuantity = 20
                        },
                        new
                        {
                            IdItem = 2,
                            IdOrder = 2,
                            ItemQuantity = 3
                        });
                });

            modelBuilder.Entity("OrderManagement.Entities.Order", b =>
                {
                    b.HasOne("OrderManagement.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Order_Client");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderManagement.Entities.OrderItem", b =>
                {
                    b.HasOne("OrderManagement.Entities.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("OrderItem_Item");

                    b.HasOne("OrderManagement.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("OrderItem_Order");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderManagement.Entities.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderManagement.Entities.Item", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("OrderManagement.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
